/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
Falta borrar pel√≠culas y quitar campos que no sirven o no los usamos con el primer constructor
*/




package vista;


import controlador.Operaciones;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Actor;
import modelo.Film;
import modelo.FilmActor;
import modelo.Language;




/**
 *
 * @author terrorist
 */
public class principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    
    //Objects of operation class
    private Operaciones oper = null;    
    //Objects of class language
    private List<Language> listLanguage = null;
    private Language language;
    //Objects of Actor class
    private List<Actor> listaActores = null;
    private Actor actor = null;
    private int pointerActor ;
    //Objects of films class
    private Film film = null;
    private List<Film> listFilms = null;
    private int pointerFilm;        
    //Objects of FilmActor
    private FilmActor filmActor = null;
    //Booleans variables for more comprobations
    private boolean checkFields = false;
    private boolean modify = false;//for check if modify or new (actor or film).
    private boolean noActors = false;
    //Normal querys in sakila
    private Statement stmt = null;
    private ResultSet rs = null;
    private Connection conn = null;
    private PreparedStatement pstmt = null;     
    //Table for actors-films
    private DefaultTableModel dtm = null;     
    private DefaultListModel dlm = null;    
    //CALENDAR
    private Calendar calendar  = GregorianCalendar.getInstance();//
    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd ");
    
    
    
    
    
    public principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        oper = new Operaciones();
        //Remove all items from ComboBox
        jcbLanguajePeliculas.removeAllItems();
        jComboBoxActors.removeAllItems();
        jComboBoxActors.setEnabled(false);
        //Ocultamos boton de guardar cambios en JdialogActor
        jbtGuardarCambiosActor.setEnabled(false);
        jbtGuardarCambiosPelicula.setEnabled(false);
        jbtCancelarModificacionPelicula.setEnabled(false);
        jbtCancelarCambiosActor.setEnabled(false);               
    }
    
    private boolean insertActorsInCombo(){
        actor = null;
        listaActores = null;
        listaActores= oper.mostrarActores();        
        if(listaActores.size()==0){
            JOptionPane.showMessageDialog(null, "Please insert a actors firts to include in DB new Film");
            noActors= false;
        }else{
            for(int x = 0 ; x<listaActores.size() ; x++){
                actor = listaActores.get(x);
                jComboBoxActors.addItem(actor.getFirstName());
            }
            noActors = true;
        }        
        return noActors;
    }
    
    
    
    
    //insert a values into combobox languages
    private void insertLanguageInCombo(){         
        try {
            String jdbcUrl = "jdbc:mysql://localhost:3306/sakila";
            conn = DriverManager.getConnection(jdbcUrl, "root", "1234");            
            //Create the preparedStatement
            pstmt = conn.prepareStatement("select name from language");
            //Insert into a ResultSet
            rs = pstmt.executeQuery();
            while(rs.next()){
                jcbLanguajePeliculas.addItem(rs.getString(1));
            }            
        } catch (SQLException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdActores = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdActor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombreActor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApellidoActor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jbtNuevoActor = new javax.swing.JButton();
        jbtModificarActor = new javax.swing.JButton();
        jbtEliminarActor = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jbtFirstActor = new javax.swing.JButton();
        jbtPreviousActor = new javax.swing.JButton();
        jbtNextActor = new javax.swing.JButton();
        jbtLastActor = new javax.swing.JButton();
        lblPointerActor = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblSizeActors = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jbtGuardarCambiosActor = new javax.swing.JButton();
        jbtCancelarCambiosActor = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        dateChooserComboActors = new datechooser.beans.DateChooserCombo();
        jdPeliculas = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtIdPeliculas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTitlePeliculas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtYearPeliculas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jcbLanguajePeliculas = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtRentalDurationPeliculas = new javax.swing.JTextField();
        txtRentalRatePeliculas = new javax.swing.JTextField();
        txtLengthPeliculas = new javax.swing.JTextField();
        txtCostPeliculas = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jbtNuevaPelicula = new javax.swing.JButton();
        jbtModificarPelicula = new javax.swing.JButton();
        jbtEliminarPelicula = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescriptionPeliculas = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jbtGuardarCambiosPelicula = new javax.swing.JButton();
        jbtCancelarModificacionPelicula = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jbtFirstFilm = new javax.swing.JButton();
        jbtPreviousFilm = new javax.swing.JButton();
        jbtNextFilm = new javax.swing.JButton();
        jbtLastFilm = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        dateChooserComboFilms = new datechooser.beans.DateChooserCombo();
        jComboBoxActors = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jbtIrAPeliculas = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jbtIrAActores = new javax.swing.JButton();

        jdActores.setTitle("Sakila -- Bd -- Actores -- AdriSC");
        jdActores.setMinimumSize(new java.awt.Dimension(700, 600));
        jdActores.setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Actores"));
        jPanel4.setName("Sakila -- Bd -- Actores -- AdriSC"); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(750, 600));

        jLabel1.setText("ID ;");

        txtIdActor.setEnabled(false);

        jLabel2.setText("NAME ;");

        txtNombreActor.setEnabled(false);

        jLabel3.setText("SURNAME ;");

        txtApellidoActor.setEnabled(false);

        jLabel4.setText("LAST UPDATE ;");

        jPanel5.setBackground(new java.awt.Color(255, 204, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtNuevoActor.setText("Nuevo");
        jbtNuevoActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNuevoActorActionPerformed(evt);
            }
        });

        jbtModificarActor.setText("Modificar");
        jbtModificarActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtModificarActorActionPerformed(evt);
            }
        });

        jbtEliminarActor.setText("Eliminar");
        jbtEliminarActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEliminarActorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtNuevoActor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtModificarActor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtEliminarActor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtNuevoActor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtModificarActor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtEliminarActor)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 204, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cursor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtFirstActor.setText("l<");
        jbtFirstActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFirstActorActionPerformed(evt);
            }
        });

        jbtPreviousActor.setText("<");
        jbtPreviousActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPreviousActorActionPerformed(evt);
            }
        });

        jbtNextActor.setText(">");
        jbtNextActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNextActorActionPerformed(evt);
            }
        });

        jbtLastActor.setText(">l");
        jbtLastActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLastActorActionPerformed(evt);
            }
        });

        jLabel19.setText("/");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jbtFirstActor)
                        .addGap(26, 26, 26)
                        .addComponent(jbtPreviousActor))
                    .addComponent(lblPointerActor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtNextActor)
                    .addComponent(lblSizeActors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addComponent(jbtLastActor)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtFirstActor)
                    .addComponent(jbtPreviousActor)
                    .addComponent(jbtNextActor)
                    .addComponent(jbtLastActor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSizeActors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(lblPointerActor, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel12.setBackground(new java.awt.Color(255, 204, 102));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Confirmar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtGuardarCambiosActor.setText("Guardar");
        jbtGuardarCambiosActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtGuardarCambiosActorActionPerformed(evt);
            }
        });

        jbtCancelarCambiosActor.setText("Cancelar");
        jbtCancelarCambiosActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarCambiosActorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtGuardarCambiosActor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtCancelarCambiosActor, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jbtGuardarCambiosActor)
                .addGap(18, 18, 18)
                .addComponent(jbtCancelarCambiosActor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(255, 204, 102));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pel√≠culas seg√∫n actores", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabla.setEnabled(false);
        jScrollPane2.setViewportView(tabla);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/actores.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(54, 54, 54)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtIdActor, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombreActor, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                .addComponent(txtApellidoActor)
                                .addComponent(dateChooserComboActors, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(167, 167, 167)))
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel17)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdActor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreActor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellidoActor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserComboActors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel17)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jdActoresLayout = new javax.swing.GroupLayout(jdActores.getContentPane());
        jdActores.getContentPane().setLayout(jdActoresLayout);
        jdActoresLayout.setHorizontalGroup(
            jdActoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdActoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jdActoresLayout.setVerticalGroup(
            jdActoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdActoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );

        jdPeliculas.setTitle("Sakila -- Bd --Pel√≠culas -- AdriSC");
        jdPeliculas.setMinimumSize(new java.awt.Dimension(810, 730));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Pel√≠culas"));

        jLabel5.setText("ID ;");

        txtIdPeliculas.setEnabled(false);

        jLabel6.setText("TITLE ;");

        txtTitlePeliculas.setEnabled(false);

        jLabel7.setText("YEAR ;");

        txtYearPeliculas.setEnabled(false);

        jLabel8.setText("LANGUAJE ;");

        jcbLanguajePeliculas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbLanguajePeliculas.setEnabled(false);

        jLabel9.setText("RENTAL DURATION ;");

        jLabel10.setText("RENTAL RATE ;");

        jLabel11.setText("LENGTH ;");

        jLabel12.setText("COST/REPLACE ;");

        jLabel15.setText("LAST UPDATE ;");

        txtRentalDurationPeliculas.setEnabled(false);

        txtRentalRatePeliculas.setEnabled(false);

        txtLengthPeliculas.setEnabled(false);

        txtCostPeliculas.setEnabled(false);

        jPanel9.setBackground(new java.awt.Color(255, 204, 102));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtNuevaPelicula.setText("Nueva");
        jbtNuevaPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNuevaPeliculaActionPerformed(evt);
            }
        });

        jbtModificarPelicula.setText("Modificar");
        jbtModificarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtModificarPeliculaActionPerformed(evt);
            }
        });

        jbtEliminarPelicula.setText("Eliminar");
        jbtEliminarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEliminarPeliculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtNuevaPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtModificarPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtEliminarPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtNuevaPelicula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtModificarPelicula)
                .addGap(18, 18, 18)
                .addComponent(jbtEliminarPelicula)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel16.setText("DESCRIPTION ;");

        txtDescriptionPeliculas.setColumns(20);
        txtDescriptionPeliculas.setRows(5);
        txtDescriptionPeliculas.setEnabled(false);
        jScrollPane1.setViewportView(txtDescriptionPeliculas);

        jPanel10.setBackground(new java.awt.Color(255, 204, 102));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Confirmar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtGuardarCambiosPelicula.setText("Guardar");
        jbtGuardarCambiosPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtGuardarCambiosPeliculaActionPerformed(evt);
            }
        });

        jbtCancelarModificacionPelicula.setText("Cancelar");
        jbtCancelarModificacionPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarModificacionPeliculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtGuardarCambiosPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtCancelarModificacionPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtGuardarCambiosPelicula)
                .addGap(18, 18, 18)
                .addComponent(jbtCancelarModificacionPelicula)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(255, 204, 102));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cursor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtFirstFilm.setText("l<");
        jbtFirstFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFirstFilmActionPerformed(evt);
            }
        });

        jbtPreviousFilm.setText("<");
        jbtPreviousFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPreviousFilmActionPerformed(evt);
            }
        });

        jbtNextFilm.setText(">");
        jbtNextFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNextFilmActionPerformed(evt);
            }
        });

        jbtLastFilm.setText(">l");
        jbtLastFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLastFilmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtFirstFilm)
                .addGap(18, 18, 18)
                .addComponent(jbtPreviousFilm)
                .addGap(18, 18, 18)
                .addComponent(jbtNextFilm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtLastFilm)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtFirstFilm)
                    .addComponent(jbtPreviousFilm)
                    .addComponent(jbtNextFilm)
                    .addComponent(jbtLastFilm))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/peliculas.png"))); // NOI18N

        jComboBoxActors.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("ACTOR ;");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel16))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTitlePeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtYearPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbLanguajePeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRentalDurationPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(txtRentalRatePeliculas)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(85, 85, 85)
                        .addComponent(txtLengthPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCostPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserComboFilms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxActors, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtIdPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTitlePeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtYearPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jcbLanguajePeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtRentalDurationPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRentalRatePeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(44, 44, 44)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtLengthPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(dateChooserComboFilms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(txtCostPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxActors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout jdPeliculasLayout = new javax.swing.GroupLayout(jdPeliculas.getContentPane());
        jdPeliculas.getContentPane().setLayout(jdPeliculasLayout);
        jdPeliculasLayout.setHorizontalGroup(
            jdPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdPeliculasLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jdPeliculasLayout.setVerticalGroup(
            jdPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdPeliculasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AdriSC  --  HIBERNATE");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gesti√≥n de BD Sakila AdriSC"));

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pel√≠culas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtIrAPeliculas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconFilm.png"))); // NOI18N
        jbtIrAPeliculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtIrAPeliculasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 168, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jbtIrAPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(jbtIrAPeliculas)
                    .addContainerGap(36, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(255, 204, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actores", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jbtIrAActores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconActor.jpg"))); // NOI18N
        jbtIrAActores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtIrAActoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtIrAActores, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jbtIrAActores)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(229, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(188, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtIrAActoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtIrAActoresActionPerformed
        jdActores.setVisible(true);
        jdActores.setLocationRelativeTo(null);
        vaciaEtiquetasActores();
        //Actions to do in Sakila DB      
        listaActores=oper.mostrarActores();//Cargamos la lista de la tabla actores
        //If list of actor contains information
        if(listaActores.size()!=0){
            lblPointerActor.setText(""+1);//Indicamos primer numero de actores, 
            // siempre ser√° el 1 al principio.
            lblSizeActors.setText(""+listaActores.size());//Indicamos total de actores
            System.out.println("Tama√±o de la lista"+listaActores.size());//Flag
            //Pedimos a el m√©todo muestre los datos del primer actor
            muestraActor(listaActores, 0);
            llenaTablaActoresPeliculas();
            dateChooserComboActors.setEnabled(false);
        }else{
            //If list of actors not contains information
            lblPointerActor.setText("");
            blockCursor(false);
            jbtModificarActor.setEnabled(false);
            jbtEliminarActor.setEnabled(false);
            dateChooserComboActors.setEnabled(false);
        }
    }//GEN-LAST:event_jbtIrAActoresActionPerformed

    
    
    // M√©todo al que le pedira la lista de los actores y el n√∫mero, que ser√° el 
    // actor que mostrar√° en las etiquetas, creadas para esto.
    private void muestraActor(List<Actor> listActors , int number){
        pointerActor = number;
        Actor actor = new Actor();        
        actor = listActors.get(number);
        txtIdActor.setText(""+actor.getActorId());
        txtNombreActor.setText(""+actor.getFirstName());
        txtApellidoActor.setText(""+actor.getLastName());
        calendar.setTime(actor.getLastUpdate());
        //Introducimos el calendario en el comboFecha
        dateChooserComboActors.setSelectedDate(calendar);
        activaEtiquetasActores(false);
    }
    
    
    private void llenaTablaActoresPeliculas(){
        dtm = new DefaultTableModel();
        dtm.setNumRows(0);
        tabla.setModel(dtm);
        try {
            String jdbcUrl = "jdbc:mysql://localhost:3306/sakila";
            conn = DriverManager.getConnection(jdbcUrl, "root", "1234");
            System.out.println("Conexi√≥n establecida con la Base de datos...");
            //Create the preparedStatement
            pstmt = conn.prepareStatement("select actor.first_name as actor, film.title as film from film_actor  \n" +
                    "inner join actor on film_actor.actor_id = actor.actor_id \n" +
                    "inner join film on film_actor.film_id = film.film_id\n" +
                    "where film_actor.actor_id = ?;");
            //Insert into a ResultSet
            pstmt.setInt(1,Integer.parseInt(txtIdActor.getText()));
            rs = pstmt.executeQuery(); 
            System.out.println(rs);
            ResultSetMetaData rsMd = rs.getMetaData();
            //Number of columns of the query.
            int cantidadColumnas = rsMd.getColumnCount();
            dtm.setColumnCount(0);            
            for (int i = 1 ; i <= cantidadColumnas; i++) {
                dtm.addColumn(rsMd.getColumnLabel(i));
            }
            while (rs.next()) {                
                //Creamos array de objetos para rellenar los campos de la fila
                Object[] fila = new Object[cantidadColumnas];
                //obtenemos los datos y los metemos dentro de el array fila
                for (int i = 0 ; i < cantidadColumnas ; i++) {
                        fila[i]=rs.getObject(i+1);                    
                }                 
                dtm.addRow(fila);
            }
            rs.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "An error has ocurred in Mysql sintax");
        }
        
    }
    
    private void activaEtiquetasActores(boolean pass){
        txtNombreActor.setEnabled(pass);
        txtApellidoActor.setEnabled(pass);
        dateChooserComboActors.setEnabled(pass);
    }
    
    
    private void vaciaEtiquetasActores(){
        txtNombreActor.setText("");
        txtApellidoActor.setText("");
    }
    
    private void activaEtiquetasPeliculas(boolean pass){
        txtTitlePeliculas.setEnabled(pass);
        txtDescriptionPeliculas.setEnabled(pass);
        txtYearPeliculas.setEnabled(pass);
        jcbLanguajePeliculas.setEnabled(pass);
        txtRentalDurationPeliculas.setEnabled(pass);
        txtRentalRatePeliculas.setEnabled(pass);
        txtLengthPeliculas.setEnabled(pass);
        txtCostPeliculas.setEnabled(pass);
        dateChooserComboFilms.setEnabled(pass);
    }
    
    private void vaciaEtiquetasPeliculas(){
        txtTitlePeliculas.setText("");
        txtDescriptionPeliculas.setText("");
        txtYearPeliculas.setText("");
        txtRentalRatePeliculas.setText("");
        txtRentalDurationPeliculas.setText("");
        txtLengthPeliculas.setText("");
        txtCostPeliculas.setText("");         
    }
    
    
    private void jbtIrAPeliculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtIrAPeliculasActionPerformed
        jdPeliculas.setVisible(true);
        jdPeliculas.setLocationRelativeTo(null);
        dateChooserComboFilms.setEnabled(false);
        vaciaEtiquetasPeliculas();
        listFilms = null;
        listFilms=oper.showFilms();
        insertLanguageInCombo();
        //If list of films contains information
        if(listFilms.size()!=0){
            showFilms(listFilms, 0);
        }else{
            vaciaEtiquetasPeliculas();
            blockCursorFilms(false);
            jbtModificarPelicula.setEnabled(false);
            jbtModificarPelicula.setEnabled(false);
            jbtCancelarModificacionPelicula.setEnabled(false);  
            jbtEliminarPelicula.setEnabled(false);
        }
    }//GEN-LAST:event_jbtIrAPeliculasActionPerformed

        
    private void blockCursorFilms(boolean pass){
        jbtFirstFilm.setEnabled(pass);
        jbtPreviousFilm.setEnabled(pass);
        jbtNextFilm.setEnabled(pass);
        jbtLastFilm.setEnabled(pass);
    }
        
    
    private void showFilms(List<Film> listFilms, int position){
        pointerFilm = position;
        film = listFilms.get(position);
        txtIdPeliculas.setText(""+(pointerFilm+1));
        txtTitlePeliculas.setText(film.getTitle());
        txtDescriptionPeliculas.setText(film.getDescription());
        txtYearPeliculas.setText(""+film.getReleaseYear());        
        txtRentalDurationPeliculas.setText(""+film.getRentalDuration());
        //////////////////////////////////////////////////////////////
        System.out.println("FLAG");
        System.out.println("FILM LANGUAGE; "+film.getLanguageByLanguageId().getLanguageId());
        jcbLanguajePeliculas.setSelectedIndex(film.getLanguageByLanguageId().getLanguageId()-1);
        /////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////
        txtRentalRatePeliculas.setText(""+film.getRentalRate());
        txtLengthPeliculas.setText(""+film.getLength());                
        calendar.setTime(film.getLastUpdate());
        //Agree calendar in comboDateChooser
        dateChooserComboFilms.setSelectedDate(calendar); 
        txtCostPeliculas.setText(""+film.getReplacementCost());
    }
    
    
    
    private void jbtNuevoActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNuevoActorActionPerformed
        activaEtiquetasActores(true);
        txtIdActor.setText(""+(listaActores.size()+1));//Insert id of new Actor
        lblPointerActor.setText(""+(listaActores.size()+1));//Show de last number of the list
        lblSizeActors.setText(""+(listaActores.size()+1));//Show the last number of the list
        jbtNuevoActor.setEnabled(false);//Enabled the newActor Button
        jbtGuardarCambiosActor.setEnabled(true);
        jbtCancelarCambiosActor.setEnabled(true);
        jbtModificarActor.setEnabled(false);
        jbtEliminarActor.setEnabled(false);
        vaciaEtiquetasActores();
        blockCursor(false);//Blocked the cursor buttons
        modify = false;//To check this operation is modify or new actor        
    }//GEN-LAST:event_jbtNuevoActorActionPerformed

    
    //Ths method block the cursor buttons for avoid prossible problems
    private void blockCursor(boolean pass){
        jbtFirstActor.setEnabled(pass);
        jbtPreviousActor.setEnabled(pass);
        jbtLastActor.setEnabled(pass);
        jbtNextActor.setEnabled(pass);
    }
    
    
    //ACTION EVENT of new button  **-- FILM --**
    private void jbtNuevaPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNuevaPeliculaActionPerformed
        
        if(insertActorsInCombo()){
            activaEtiquetasPeliculas(true);
            vaciaEtiquetasPeliculas();
            jComboBoxActors.setEnabled(true);
            txtIdPeliculas.setText(""+(listFilms.size()+1));
            jbtNuevaPelicula.setEnabled(false);            
            jbtModificarPelicula.setEnabled(false);
            jbtEliminarPelicula.setEnabled(false);
            jbtGuardarCambiosPelicula.setEnabled(true);
            jbtCancelarModificacionPelicula.setEnabled(true);
        }else{
            jbtCancelarModificacionPeliculaActionPerformed(evt);
            jdPeliculas.setVisible(false);
            jbtIrAActoresActionPerformed(evt);
        }
    }//GEN-LAST:event_jbtNuevaPeliculaActionPerformed

    //ACTION EVENT of cancelar button  **-- FILM -- ** 
    private void jbtCancelarModificacionPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarModificacionPeliculaActionPerformed
        activaEtiquetasPeliculas(false);
        jbtNuevaPelicula.setEnabled(true);
        jbtModificarPelicula.setEnabled(true);
        jbtEliminarPelicula.setEnabled(true);
        jbtGuardarCambiosPelicula.setEnabled(false);
        jbtCancelarModificacionPelicula.setEnabled(false);
        jComboBoxActors.setEnabled(false);
        if(listFilms.size()!=0){
            showFilms(listFilms, pointerFilm);
        }else{
            activaEtiquetasActores(false);
            jbtModificarPelicula.setEnabled(false);
            jbtCancelarModificacionPelicula.setEnabled(false);
        }
    }//GEN-LAST:event_jbtCancelarModificacionPeliculaActionPerformed

    
    //ACTION EVENT of cancelar button **-- ACTOR --**
    private void jbtCancelarCambiosActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarCambiosActorActionPerformed
        activaEtiquetasActores(false);
        jbtNuevoActor.setEnabled(true);
        jbtGuardarCambiosActor.setEnabled(false);
        jbtModificarActor.setEnabled(true);
        jbtEliminarActor.setEnabled(true);
        jbtCancelarCambiosActor.setEnabled(false);
        blockCursor(true);
        jbtIrAActoresActionPerformed(evt);
    }//GEN-LAST:event_jbtCancelarCambiosActorActionPerformed

    private void jbtNextActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNextActorActionPerformed
        if(pointerActor == listaActores.size()-1){
            JOptionPane.showMessageDialog(null, "This is the last Actor");
        }else{
            muestraActor(listaActores, (pointerActor+1));
            lblPointerActor.setText(""+(pointerActor+1));
        }
        llenaTablaActoresPeliculas();
    }//GEN-LAST:event_jbtNextActorActionPerformed

    private void jbtLastActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLastActorActionPerformed
        if(pointerActor == listaActores.size()-1){
            JOptionPane.showMessageDialog(null, "This is the last Actor");
        }else{
            muestraActor(listaActores, listaActores.size()-1);
            lblPointerActor.setText(""+(pointerActor+1));            
        }
        llenaTablaActoresPeliculas();
    }//GEN-LAST:event_jbtLastActorActionPerformed

    private void jbtPreviousActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPreviousActorActionPerformed
        if(pointerActor == 0){
            JOptionPane.showMessageDialog(null, "This is the first Actor");
        }else{
            muestraActor(listaActores, (pointerActor-1));
            lblPointerActor.setText(""+(pointerActor+1));            
        }
        llenaTablaActoresPeliculas();
    }//GEN-LAST:event_jbtPreviousActorActionPerformed

    private void jbtFirstActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFirstActorActionPerformed
        if(pointerActor == 0){
            JOptionPane.showMessageDialog(null, "This is the last Actor");
        }else{
            muestraActor(listaActores, 0);
            lblPointerActor.setText(""+(pointerActor+1));
        }
        llenaTablaActoresPeliculas();
    }//GEN-LAST:event_jbtFirstActorActionPerformed

    
    //Saved changes in actor Jdialog
    private void jbtGuardarCambiosActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtGuardarCambiosActorActionPerformed
        
        if(checkFieldsActor()){
            actor = null;
            actor = new Actor(txtNombreActor.getText(), txtApellidoActor.getText(),                    
                                dateChooserComboActors.getSelectedDate().getTime());
            //If modify boolean is false, call a  newActor Method of class operaciones
            if(!modify){
                oper.newActor(actor);
            }else{//If modify boolean is true, call a updateActor method of class Operaciones
                oper.updateActor(actor, txtNombreActor.getText(), 
                                txtApellidoActor.getText(),
                                dateChooserComboActors.getSelectedDate().getTime(),
                                (short)Integer.parseInt(txtIdActor.getText()));
                modify = false;
            }    
            jbtIrAActoresActionPerformed(evt);//Show information of the actors, start in list-Actor(0)
            blockCursor(true);
            jbtNuevoActor.setEnabled(true);
            jbtEliminarActor.setEnabled(true);
            jbtModificarActor.setEnabled(true);
            jbtCancelarCambiosActor.setEnabled(false);
            jbtGuardarCambiosActor.setEnabled(false);
        }        
    }//GEN-LAST:event_jbtGuardarCambiosActorActionPerformed

    
    private void jbtModificarActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtModificarActorActionPerformed
        activaEtiquetasActores(true);
        jbtModificarActor.setEnabled(false);
        jbtNuevoActor.setEnabled(false);
        jbtEliminarActor.setEnabled(false);
        jbtGuardarCambiosActor.setEnabled(true);
        jbtCancelarCambiosActor.setEnabled(true);
        modify = true;
    }//GEN-LAST:event_jbtModificarActorActionPerformed

    private void jbtEliminarActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEliminarActorActionPerformed
        //Check the size of the list, if don't have any actor show message 
        if(Integer.parseInt(lblSizeActors.getText())<1){
            JOptionPane.showMessageDialog(null, "Not actor for delete, please insert a new actors  in form."); 
            vaciaEtiquetasActores();
            activaEtiquetasActores(false);
            jbtIrAActoresActionPerformed(evt);
        }else{        
            //Open Confirm Dialog for ask th user
            JDialog.setDefaultLookAndFeelDecorated(true);
            int response = JOptionPane.showConfirmDialog(null, "Do you really want to delete this Actor", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.NO_OPTION) {      
                  jbtIrAActoresActionPerformed(evt);
                } else if (response == JOptionPane.YES_OPTION) {
                    //Send to the delete Method the id of the actor.
                    oper.deleteActor(actor, (short)(Integer.parseInt(txtIdActor.getText())));
                    //Call ActionPerformed for reset list and show result in form
                    jbtIrAActoresActionPerformed(evt);
                } else if (response == JOptionPane.CLOSED_OPTION) {              
                    jbtIrAActoresActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_jbtEliminarActorActionPerformed

    private void jbtFirstFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFirstFilmActionPerformed
        if(pointerFilm == 0){
            JOptionPane.showMessageDialog(null, "This is the last Film");
        }else{
            showFilms(listFilms, 0);
        }
    }//GEN-LAST:event_jbtFirstFilmActionPerformed

    private void jbtPreviousFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPreviousFilmActionPerformed
        if(pointerFilm == 0){
            JOptionPane.showMessageDialog(null, "This is the first Film");
        }else{
            showFilms(listFilms, (pointerFilm-1));
        }
    }//GEN-LAST:event_jbtPreviousFilmActionPerformed

    private void jbtNextFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNextFilmActionPerformed
        if(pointerFilm == listFilms.size()-1){
            JOptionPane.showMessageDialog(null, "This is the last Film");
        }else{
            showFilms(listFilms, (pointerFilm+1));
        }       
        
    }//GEN-LAST:event_jbtNextFilmActionPerformed

    private void jbtLastFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLastFilmActionPerformed
        if(pointerFilm == listFilms.size()-1){
            JOptionPane.showMessageDialog(null, "This is the last Film");
        }else{
            showFilms(listFilms, listFilms.size()-1);            
        }     
    }//GEN-LAST:event_jbtLastFilmActionPerformed

    //Action Event of button Save **-- Films --**
    private void jbtGuardarCambiosPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtGuardarCambiosPeliculaActionPerformed
        if(checkFieldsFilms()){
            //Create object of class language with String alone constructor
            Language language = new Language(jcbLanguajePeliculas.getSelectedItem().toString(), null);
            //To this object setId, index of comboBox of languages
            language.setLanguageId((byte)(jcbLanguajePeliculas.getSelectedIndex()+1));
            //Flag
            System.out.println(language);
            //Create a byte variable for rentalDuration field
            byte rentalDuration = Byte.valueOf(txtRentalDurationPeliculas.getText());
            //Flag
            System.out.println(rentalDuration);
            //Create a BigDecimal variable for rentalRate field
            java.math.BigDecimal rentalRate = new java.math.BigDecimal(txtRentalRatePeliculas.getText());            
            //Flag
            System.out.println(rentalRate);
            //Create a variable BugDecimal for replacementCost field, 
            java.math.BigDecimal replacementCost = new java.math.BigDecimal(txtCostPeliculas.getText());
            //Flag
            System.out.println(replacementCost);
            //empty Film object 
            film = null;
            //Instanciate object and insert variables on constructor
            film = new Film(language, 
                    txtTitlePeliculas.getText(),
                    rentalDuration, 
                    rentalRate, 
                    replacementCost, 
                    dateChooserComboActors.getSelectedDate().getTime());
            //SetId in film for indetentification in update method, this value is the same of the txtIdFilm
            film.setFilmId( Short.parseShort(txtIdPeliculas.getText()));
            //Set description of film in the object
            film.setDescription(txtDescriptionPeliculas.getText());
            film.setLength(Short.parseShort(txtLengthPeliculas.getText()));
            //If modify value is false means that action is modify film information 
            if(!modify){           
                //Save on DB
                oper.newFilm(film);    
            }else{
                //Create a diferents objects to insert in table FilmActors first 
                //Create object of class Actor
                Film filmNewFilm = new Film();
                //Set id to object
                filmNewFilm.setFilmId(Short.parseShort(txtIdPeliculas.getText()));
                //Create actor object of class Actor
                Actor actorNewFilm = new Actor();
                //SetId of object
                actorNewFilm.setActorId((short)jComboBoxActors.getSelectedIndex());
                //Create object of class FilmActor
                FilmActor filmActor = new FilmActor();
                filmActor.setActor(actorNewFilm);
                filmActor.setFilm(filmNewFilm);
                oper.newFilmActor(filmActor);
                
                
                //Update information of this film
                oper.updateFilm(film);
                //Change the value of the variable modify
                modify = false;                
            }
        }
        jbtCancelarModificacionPeliculaActionPerformed(evt);
    }//GEN-LAST:event_jbtGuardarCambiosPeliculaActionPerformed

    private void jbtModificarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtModificarPeliculaActionPerformed
        
        //Change a boolean value for indicate a SaveActionFIlmActionPerformed is a Modification         
        modify = true;
        //Activate txtFields of films to modify information 
        activaEtiquetasPeliculas(true);
        txtIdPeliculas.setEnabled(false);
        //Hidden or not a diferents buttons
        jbtNuevaPelicula.setEnabled(false);
        jbtEliminarPelicula.setEnabled(false);
        jbtModificarPelicula.setEnabled(false);
        jbtCancelarModificacionPelicula.setEnabled(true);
        jbtGuardarCambiosPelicula.setEnabled(true);
    }//GEN-LAST:event_jbtModificarPeliculaActionPerformed

    private void jbtEliminarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEliminarPeliculaActionPerformed
        //Check the size of the list, if don't have any actor show message 
        if(Integer.parseInt(txtIdPeliculas.getText())<=1){
            JOptionPane.showMessageDialog(null, "Not Films for delete, please insert a new film  in form."); 
            vaciaEtiquetasActores();
            activaEtiquetasPeliculas(false);
        }else{        
            //Open Confirm Dialog for ask th user
            JDialog.setDefaultLookAndFeelDecorated(true);
            int response = JOptionPane.showConfirmDialog(null, "Do you really want to delete this Film", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.NO_OPTION) {      
                jbtIrAPeliculasActionPerformed(evt);
                //jbtIrAActoresActionPerformed(evt);
                } else if (response == JOptionPane.YES_OPTION) {
                    //Send to the delete Method the id of the actor.
                    oper.deleteFilm(film);
                    //Call ActionPerformed for reset list and show result in form
                    jbtIrAPeliculasActionPerformed(evt);
                } else if (response == JOptionPane.CLOSED_OPTION) {              
                    jbtIrAPeliculasActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_jbtEliminarPeliculaActionPerformed

    //This method check all the parameters are include for insert a new film
    private boolean checkFieldsFilms(){
        if(txtTitlePeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Title Film' is empty, please insert a title ");
            txtTitlePeliculas.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }
        if(txtDescriptionPeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Description Film' is empty, please insert a title ");
            txtDescriptionPeliculas.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }/*
        if(txtYearPeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Year Film' is empty, please insert a title ");
            txtYearPeliculas.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }*/
        if(txtRentalDurationPeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Rental Duration Film' is empty, please insert a title ");
            txtRentalDurationPeliculas.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }/*
        if(txtLengthPeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Length Film' is empty, please insert a title ");
            txtLengthPeliculas.requestFocus();
            checkFields = false;        
        }else{
            checkFields = true;        
        }
        if(txtCostPeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Cost Film' is empty, please insert a title ");
            txtCostPeliculas.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }
        /*
        if(txtRatingPeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Rating Film' is empty, please insert a title ");
            txtRatingPeliculas.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }
        if(txtSpecialFeaturesPeliculas.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Field 'Special Feaures Film' is empty, please insert a title ");
            txtSpecialFeaturesPeliculas.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }*/
        return checkFields;
    }
    
    //This method chek the fields of tha actor, if one of this fields is empty
    //showe a message dialog and reauest focus this field for complete the information.
    private boolean checkFieldsActor(){
        if(txtNombreActor.getText().equals("")){            
            JOptionPane.showMessageDialog(null, " Field 'Name Actor' is empty, please insert a name.");
            txtNombreActor.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }
        if(txtApellidoActor.getText().equals("")){            
            JOptionPane.showMessageDialog(null , " Field 'Surname Actor' is empty, please insert a surname of this actor.");
            txtApellidoActor.requestFocus();
            checkFields = false;
        }else{
            checkFields = true;
        }    
        return checkFields;
    }
    
    
        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserComboActors;
    private datechooser.beans.DateChooserCombo dateChooserComboFilms;
    private javax.swing.JComboBox jComboBoxActors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtCancelarCambiosActor;
    private javax.swing.JButton jbtCancelarModificacionPelicula;
    private javax.swing.JButton jbtEliminarActor;
    private javax.swing.JButton jbtEliminarPelicula;
    private javax.swing.JButton jbtFirstActor;
    private javax.swing.JButton jbtFirstFilm;
    private javax.swing.JButton jbtGuardarCambiosActor;
    private javax.swing.JButton jbtGuardarCambiosPelicula;
    private javax.swing.JButton jbtIrAActores;
    private javax.swing.JButton jbtIrAPeliculas;
    private javax.swing.JButton jbtLastActor;
    private javax.swing.JButton jbtLastFilm;
    private javax.swing.JButton jbtModificarActor;
    private javax.swing.JButton jbtModificarPelicula;
    private javax.swing.JButton jbtNextActor;
    private javax.swing.JButton jbtNextFilm;
    private javax.swing.JButton jbtNuevaPelicula;
    private javax.swing.JButton jbtNuevoActor;
    private javax.swing.JButton jbtPreviousActor;
    private javax.swing.JButton jbtPreviousFilm;
    private javax.swing.JComboBox jcbLanguajePeliculas;
    private javax.swing.JDialog jdActores;
    private javax.swing.JDialog jdPeliculas;
    private javax.swing.JLabel lblPointerActor;
    private javax.swing.JLabel lblSizeActors;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtApellidoActor;
    private javax.swing.JTextField txtCostPeliculas;
    private javax.swing.JTextArea txtDescriptionPeliculas;
    private javax.swing.JTextField txtIdActor;
    private javax.swing.JTextField txtIdPeliculas;
    private javax.swing.JTextField txtLengthPeliculas;
    private javax.swing.JTextField txtNombreActor;
    private javax.swing.JTextField txtRentalDurationPeliculas;
    private javax.swing.JTextField txtRentalRatePeliculas;
    private javax.swing.JTextField txtTitlePeliculas;
    private javax.swing.JTextField txtYearPeliculas;
    // End of variables declaration//GEN-END:variables




}
